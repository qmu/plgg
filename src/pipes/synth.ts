import { MaybePromise } from "@plgg/semantics/MaybePromise";

/* prettier-ignore */ export function synth<A, B>(ab: (a: A) => MaybePromise<B>): (a: A) => MaybePromise<B>;
/* prettier-ignore */ export function synth<A, B, C>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,): (a: A) => MaybePromise<C>;
/* prettier-ignore */ export function synth<A, B, C, D>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,): (a: A) => MaybePromise<D>;
/* prettier-ignore */ export function synth<A, B, C, D, E>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,  de: (d: D) => MaybePromise<E>,): (a: A) => MaybePromise<E>;
/* prettier-ignore */ export function synth<A, B, C, D, E, F>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,  de: (d: D) => MaybePromise<E>,  ef: (e: E) => MaybePromise<F>,): (a: A) => MaybePromise<F>;
/* prettier-ignore */ export function synth<A, B, C, D, E, F, G>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,  de: (d: D) => MaybePromise<E>,  ef: (e: E) => MaybePromise<F>,  fg: (f: F) => MaybePromise<G>,): (a: A) => MaybePromise<G>;
/* prettier-ignore */ export function synth<A, B, C, D, E, F, G, H>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,  de: (d: D) => MaybePromise<E>,  ef: (e: E) => MaybePromise<F>,  fg: (f: F) => MaybePromise<G>,  gh: (g: G) => MaybePromise<H>,): (a: A) => MaybePromise<H>;
/* prettier-ignore */ export function synth<A, B, C, D, E, F, G, H, I>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,  de: (d: D) => MaybePromise<E>,  ef: (e: E) => MaybePromise<F>,  fg: (f: F) => MaybePromise<G>,  gh: (g: G) => MaybePromise<H>,  hi: (h: H) => MaybePromise<I>,): (a: A) => MaybePromise<I>;
/* prettier-ignore */ export function synth<A, B, C, D, E, F, G, H, I, J>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,  de: (d: D) => MaybePromise<E>,  ef: (e: E) => MaybePromise<F>,  fg: (f: F) => MaybePromise<G>,  gh: (g: G) => MaybePromise<H>,  hi: (h: H) => MaybePromise<I>,  ij: (i: I) => MaybePromise<J>,): (a: A) => MaybePromise<J>;
/* prettier-ignore */ export function synth<A, B, C, D, E, F, G, H, I, J, K>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,  de: (d: D) => MaybePromise<E>,  ef: (e: E) => MaybePromise<F>,  fg: (f: F) => MaybePromise<G>,  gh: (g: G) => MaybePromise<H>,  hi: (h: H) => MaybePromise<I>,  ij: (i: I) => MaybePromise<J>,  jk: (j: J) => MaybePromise<K>,): (a: A) => MaybePromise<K>;
/* prettier-ignore */ export function synth<A, B, C, D, E, F, G, H, I, J, K, L>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,  de: (d: D) => MaybePromise<E>,  ef: (e: E) => MaybePromise<F>,  fg: (f: F) => MaybePromise<G>,  gh: (g: G) => MaybePromise<H>,  hi: (h: H) => MaybePromise<I>,  ij: (i: I) => MaybePromise<J>,  jk: (j: J) => MaybePromise<K>,  kl: (k: K) => MaybePromise<L>,): (a: A) => MaybePromise<L>;
/* prettier-ignore */ export function synth<A, B, C, D, E, F, G, H, I, J, K, L, M>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,  de: (d: D) => MaybePromise<E>,  ef: (e: E) => MaybePromise<F>,  fg: (f: F) => MaybePromise<G>,  gh: (g: G) => MaybePromise<H>,  hi: (h: H) => MaybePromise<I>,  ij: (i: I) => MaybePromise<J>,  jk: (j: J) => MaybePromise<K>,  kl: (k: K) => MaybePromise<L>,  lm: (l: L) => MaybePromise<M>,): (a: A) => MaybePromise<M>;
/* prettier-ignore */ export function synth<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,  de: (d: D) => MaybePromise<E>,  ef: (e: E) => MaybePromise<F>,  fg: (f: F) => MaybePromise<G>,  gh: (g: G) => MaybePromise<H>,  hi: (h: H) => MaybePromise<I>,  ij: (i: I) => MaybePromise<J>,  jk: (j: J) => MaybePromise<K>,  kl: (k: K) => MaybePromise<L>,  lm: (l: L) => MaybePromise<M>,  mn: (m: M) => MaybePromise<N>,): (a: A) => MaybePromise<N>;
/* prettier-ignore */ export function synth<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,  de: (d: D) => MaybePromise<E>,  ef: (e: E) => MaybePromise<F>,  fg: (f: F) => MaybePromise<G>,  gh: (g: G) => MaybePromise<H>,  hi: (h: H) => MaybePromise<I>,  ij: (i: I) => MaybePromise<J>,  jk: (j: J) => MaybePromise<K>,  kl: (k: K) => MaybePromise<L>,  lm: (l: L) => MaybePromise<M>,  mn: (m: M) => MaybePromise<N>,  no: (n: N) => MaybePromise<O>,): (a: A) => MaybePromise<O>;
/* prettier-ignore */ export function synth<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,  de: (d: D) => MaybePromise<E>,  ef: (e: E) => MaybePromise<F>,  fg: (f: F) => MaybePromise<G>,  gh: (g: G) => MaybePromise<H>,  hi: (h: H) => MaybePromise<I>,  ij: (i: I) => MaybePromise<J>,  jk: (j: J) => MaybePromise<K>,  kl: (k: K) => MaybePromise<L>,  lm: (l: L) => MaybePromise<M>,  mn: (m: M) => MaybePromise<N>,  no: (n: N) => MaybePromise<O>,  op: (o: O) => MaybePromise<P>,): (a: A) => MaybePromise<P>;
/* prettier-ignore */ export function synth<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,  de: (d: D) => MaybePromise<E>,  ef: (e: E) => MaybePromise<F>,  fg: (f: F) => MaybePromise<G>,  gh: (g: G) => MaybePromise<H>,  hi: (h: H) => MaybePromise<I>,  ij: (i: I) => MaybePromise<J>,  jk: (j: J) => MaybePromise<K>,  kl: (k: K) => MaybePromise<L>,  lm: (l: L) => MaybePromise<M>,  mn: (m: M) => MaybePromise<N>,  no: (n: N) => MaybePromise<O>,  op: (o: O) => MaybePromise<P>,  pq: (p: P) => MaybePromise<Q>,): (a: A) => MaybePromise<Q>;
/* prettier-ignore */ export function synth<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,  de: (d: D) => MaybePromise<E>,  ef: (e: E) => MaybePromise<F>,  fg: (f: F) => MaybePromise<G>,  gh: (g: G) => MaybePromise<H>,  hi: (h: H) => MaybePromise<I>,  ij: (i: I) => MaybePromise<J>,  jk: (j: J) => MaybePromise<K>,  kl: (k: K) => MaybePromise<L>,  lm: (l: L) => MaybePromise<M>,  mn: (m: M) => MaybePromise<N>,  no: (n: N) => MaybePromise<O>,  op: (o: O) => MaybePromise<P>,  pq: (p: P) => MaybePromise<Q>,  qr: (q: Q) => MaybePromise<R>,): (a: A) => MaybePromise<R>;
/* prettier-ignore */ export function synth<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,  de: (d: D) => MaybePromise<E>,  ef: (e: E) => MaybePromise<F>,  fg: (f: F) => MaybePromise<G>,  gh: (g: G) => MaybePromise<H>,  hi: (h: H) => MaybePromise<I>,  ij: (i: I) => MaybePromise<J>,  jk: (j: J) => MaybePromise<K>,  kl: (k: K) => MaybePromise<L>,  lm: (l: L) => MaybePromise<M>,  mn: (m: M) => MaybePromise<N>,  no: (n: N) => MaybePromise<O>,  op: (o: O) => MaybePromise<P>,  pq: (p: P) => MaybePromise<Q>,  qr: (q: Q) => MaybePromise<R>,  rs: (r: R) => MaybePromise<S>,): (a: A) => MaybePromise<S>;
/* prettier-ignore */ export function synth<  A,  B,  C,  D,  E,  F,  G,  H,  I,  J,  K,  L,  M,  N,  O,  P,  Q,  R,  S,  T,>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,  de: (d: D) => MaybePromise<E>,  ef: (e: E) => MaybePromise<F>,  fg: (f: F) => MaybePromise<G>,  gh: (g: G) => MaybePromise<H>,  hi: (h: H) => MaybePromise<I>,  ij: (i: I) => MaybePromise<J>,  jk: (j: J) => MaybePromise<K>,  kl: (k: K) => MaybePromise<L>,  lm: (l: L) => MaybePromise<M>,  mn: (m: M) => MaybePromise<N>,  no: (n: N) => MaybePromise<O>,  op: (o: O) => MaybePromise<P>,  pq: (p: P) => MaybePromise<Q>,  qr: (q: Q) => MaybePromise<R>,  rs: (r: R) => MaybePromise<S>,  st: (s: S) => MaybePromise<T>,): (a: A) => MaybePromise<T>;
/* prettier-ignore */ export function synth<  A,  B,  C,  D,  E,  F,  G,  H,  I,  J,  K,  L,  M,  N,  O,  P,  Q,  R,  S,  T,  U,>(  ab: (a: A) => MaybePromise<B>,  bc: (b: B) => MaybePromise<C>,  cd: (c: C) => MaybePromise<D>,  de: (d: D) => MaybePromise<E>,  ef: (e: E) => MaybePromise<F>,  fg: (f: F) => MaybePromise<G>,  gh: (g: G) => MaybePromise<H>,  hi: (h: H) => MaybePromise<I>,  ij: (i: I) => MaybePromise<J>,  jk: (j: J) => MaybePromise<K>,  kl: (k: K) => MaybePromise<L>,  lm: (l: L) => MaybePromise<M>,  mn: (m: M) => MaybePromise<N>,  no: (n: N) => MaybePromise<O>,  op: (o: O) => MaybePromise<P>,  pq: (p: P) => MaybePromise<Q>,  qr: (q: Q) => MaybePromise<R>,  rs: (r: R) => MaybePromise<S>,  st: (s: S) => MaybePromise<T>,  tu: (t: T) => MaybePromise<U>,): (a: A) => MaybePromise<U>;

/*
 * Composes functions into reusable pipeline.
 */
export function synth(
  ...fns: ReadonlyArray<(a: unknown) => MaybePromise<unknown>>
): (input: unknown) => Promise<unknown> {
  return (input: unknown) =>
    fns.reduce(async (acc, fn) => fn(await acc), Promise.resolve(input));
}
