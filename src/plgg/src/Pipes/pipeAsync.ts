import { MaybePromise } from "plgg/index";

/*
 * Type-safe function composition with overloads for inference.
 */
export function pipeAsync<A, B>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
): MaybePromise<B>;
export function pipeAsync<A, B, C>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
): MaybePromise<C>;
export function pipeAsync<A, B, C, D>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
): MaybePromise<D>;
export function pipeAsync<A, B, C, D, E>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
): MaybePromise<E>;
export function pipeAsync<A, B, C, D, E, F>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
): MaybePromise<F>;
export function pipeAsync<A, B, C, D, E, F, G>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
): MaybePromise<G>;
export function pipeAsync<A, B, C, D, E, F, G, H>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
): MaybePromise<H>;
export function pipeAsync<A, B, C, D, E, F, G, H, I>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
): MaybePromise<I>;
export function pipeAsync<A, B, C, D, E, F, G, H, I, J>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
): MaybePromise<J>;
export function pipeAsync<A, B, C, D, E, F, G, H, I, J, K>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
): MaybePromise<K>;
export function pipeAsync<A, B, C, D, E, F, G, H, I, J, K, L>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
): MaybePromise<L>;
export function pipeAsync<A, B, C, D, E, F, G, H, I, J, K, L, M>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
  lm: (l: L) => MaybePromise<M>,
): MaybePromise<M>;
export function pipeAsync<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
  lm: (l: L) => MaybePromise<M>,
  mn: (m: M) => MaybePromise<N>,
): MaybePromise<N>;
export function pipeAsync<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
  lm: (l: L) => MaybePromise<M>,
  mn: (m: M) => MaybePromise<N>,
  no: (n: N) => MaybePromise<O>,
): MaybePromise<O>;
export function pipeAsync<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
  lm: (l: L) => MaybePromise<M>,
  mn: (m: M) => MaybePromise<N>,
  no: (n: N) => MaybePromise<O>,
  op: (o: O) => MaybePromise<P>,
): MaybePromise<P>;
export function pipeAsync<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
  lm: (l: L) => MaybePromise<M>,
  mn: (m: M) => MaybePromise<N>,
  no: (n: N) => MaybePromise<O>,
  op: (o: O) => MaybePromise<P>,
  pq: (p: P) => MaybePromise<Q>,
): MaybePromise<Q>;
export function pipeAsync<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
  lm: (l: L) => MaybePromise<M>,
  mn: (m: M) => MaybePromise<N>,
  no: (n: N) => MaybePromise<O>,
  op: (o: O) => MaybePromise<P>,
  pq: (p: P) => MaybePromise<Q>,
  qr: (q: Q) => MaybePromise<R>,
): MaybePromise<R>;
export function pipeAsync<
  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  J,
  K,
  L,
  M,
  N,
  O,
  P,
  Q,
  R,
  S,
>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
  lm: (l: L) => MaybePromise<M>,
  mn: (m: M) => MaybePromise<N>,
  no: (n: N) => MaybePromise<O>,
  op: (o: O) => MaybePromise<P>,
  pq: (p: P) => MaybePromise<Q>,
  qr: (q: Q) => MaybePromise<R>,
  rs: (r: R) => MaybePromise<S>,
): MaybePromise<S>;
export function pipeAsync<
  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  J,
  K,
  L,
  M,
  N,
  O,
  P,
  Q,
  R,
  S,
  T,
>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
  lm: (l: L) => MaybePromise<M>,
  mn: (m: M) => MaybePromise<N>,
  no: (n: N) => MaybePromise<O>,
  op: (o: O) => MaybePromise<P>,
  pq: (p: P) => MaybePromise<Q>,
  qr: (q: Q) => MaybePromise<R>,
  rs: (r: R) => MaybePromise<S>,
  st: (s: S) => MaybePromise<T>,
): MaybePromise<T>;
export function pipeAsync<
  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  J,
  K,
  L,
  M,
  N,
  O,
  P,
  Q,
  R,
  S,
  T,
  U,
>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
  lm: (l: L) => MaybePromise<M>,
  mn: (m: M) => MaybePromise<N>,
  no: (n: N) => MaybePromise<O>,
  op: (o: O) => MaybePromise<P>,
  pq: (p: P) => MaybePromise<Q>,
  qr: (q: Q) => MaybePromise<R>,
  rs: (r: R) => MaybePromise<S>,
  st: (s: S) => MaybePromise<T>,
  tu: (t: T) => MaybePromise<U>,
): MaybePromise<U>;

/**
 * Pipes value through functions sequentially.
 */
export function pipeAsync(
  value: unknown,
  ...fns: ReadonlyArray<(a: unknown) => MaybePromise<unknown>>
): Promise<unknown> {
  return fns.reduce(async (acc, fn) => fn(await acc), Promise.resolve(value));
}
